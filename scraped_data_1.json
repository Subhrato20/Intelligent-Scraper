[
  {
    "team_id": "1",
    "items": [
      {
        "title": "It's OK to postpone your interviews if you're not ready",
        "content": "At interviewing.io, we\u2019ve seen hundreds of thousands of engineers go through job searches, and the biggest mistakes we see people make are all variations on the same theme: not postponing their interview when they aren\u2019t ready.\n\nI\u2019ve found myself repeating that it\u2019s OK to postpone interviews so often that I finally broke down and decided to make it a blog post. It\u2019s very simple advice, so the bulk of this post will be spent trying to convince you that it\u2019s fine to postpone. And then of course I\u2019ll tell you what to say.\n\nDo any of these situations sound familiar?\n\nBoth of these situations are extremely common, but they\u2019re both preventable. You can just ask to postpone. There are a few edge cases where that\u2019s not a good idea, but in most situations, it\u2019s the right thing to do.\n\nIf you\u2019re applying to a large company with a centralized process (in other words, a process where you interview first and get matched with a team later), postponing is almost always OK. These companies are perpetually hiring, and their open roles are evergreen.1\n\nEven if you\u2019re applying to a large company with a decentralized process (where you interview for a specific team), we recommend postponing unless you\u2019re extremely excited about the team you\u2019re talking to. In that scenario, it\u2019s possible that if you postpone, the slot will be filled. But if it\u2019s not a perfect fit and you\u2019d be OK with another team, we recommend postponing \u2014 in the worst case, you\u2019ll simply get slotted into a different team.\n\nThe only time when postponing isn\u2019t a good idea is when you\u2019re applying to a very small company that has just one open headcount. In that scenario, it is possible that postponing will cost you the opportunity because they\u2019ll choose another candidate. However, you can ask how likely that is to happen, up front.\n\nWith that edge case out of the way, here\u2019s a little-known fact about how timing works at large companies: Recruiters don\u2019t really care when you interview. Though they\u2019d prefer that you interview sooner rather than later so they can hit their numbers, at the end of the day, they\u2019d rather be responsible for successful candidates than unsuccessful ones.\n\nEvery recruiter, in every job search, will tell you that time is of the essence because of all the other candidates in the pipeline. Most of the time, that is irrelevant and just something they say to create an artificial sense of urgency. There are always other candidates in the pipeline because the roles are evergreen. But they have nothing to do with your prospects.\n\nYou can use this text verbatim when postponing your interviews, and, with some small edits, you can even use it several times (e.g., before the phone screen and then again before the onsite).\n\n\nI\u2019m really excited about interviewing at [company name]. Unfortunately, if I\u2019m honest, I haven\u2019t had a chance to practice as much as I\u2019d like. I know how hard and competitive these interviews are, and I want to put my best foot forward. I think I\u2019ll realistically need a couple of months to prepare. How about we schedule my interview for [date]?\n\nOne important thing to remember is to be conservative about how long it will take. You\u2019ve probably heard the adage about how, when you have to estimate the time an engineering task will take, you should think of a number and double it. Here, you may even want to triple it.\n\nI\u2019ve seen many candidates ask for 2 weeks because that feels like a reasonable thing to ask for, only to have it blow up in their face when they realize they need to ask for another extension (which is still worth doing but harder because the company may think you\u2019re taking them for a ride). If you need two months, ask for two months.\n\nThis section is extra credit, but once you get comfortable with postponing your interviews when you\u2019re not prepared, you can use the same skills to batch your interviews and ultimately control the timing of your job search.\n\nWhat does it mean to control the timing of your job search? Ideally, you want all of your offers to come in at the same time, both because it maximizes optionality (one company that arbitrarily offers first doesn\u2019t rush you into making a decision) and maximizes leverage (you can negotiate from a position of power).\n\nIf you want to dive deeper into this process, take a look at a book I recently co-wrote, *Beyond Cracking the Coding Interview*. It includes a full chapter about how to manage your job search, which covers everything from determining the order in which to approach companies to how to speed them up and slow them down once you\u2019re in process. There\u2019s a lot more detail than I can touch in this post, and much of it depends on your specific circumstances, but you can probably get 50% of the way there just by postponing your interviews in batches.\n\nThe big insight here is that, except for the edge cases we discussed above, a recruiting process can be paused at any point.\n\nIn other words, you can do a bunch of outreach to companies, then do a bunch of enthusiastic recruiter calls, and THEN pause all the processes until you\u2019re prepared to do technical phone screens.\n\nThen, you batch the phone screens.\n\nFinally, if needed, you pause again to give yourself time to prepare for onsites. Onsite interviews require a different skill set than technical phone screens. The technical phone screen isn\u2019t about depth or fit \u2014 it\u2019s just a way to cut people who aren\u2019t likely to pass the onsite.\n\nThe onsite, on the other hand, isn\u2019t just meant to cut poor performers. It\u2019s at once a deeper dive into your technical ability and a way to gauge fit. If you\u2019ll be interviewing with your future team (typical at companies with a decentralized process), it\u2019s also meant to assess your ability to work together, collaborate on hard things, complement the team's existing skillset, and so on. It usually has some coding (to verify that your technical phone screen wasn\u2019t a fluke), but the focus is usually on system design and behavioral interviews2, which are also the interviews commonly used for leveling decisions.\n\nSo, onsite prep is much more about system design and getting your stories right for your behavioral interviews. Some people can pull off prepping for both coding and sys design/behavioral at the same time. For many, depending on their existing familiarity with the material, it\u2019s a tall order. So, it\u2019s wise to take the time you need and prepare.\n\nThen, once you\u2019re ready, you batch the onsites.\n\nWhen your offers come in, you should ask for extensions as needed, speed companies up, and start negotiating (which we\u2019ve written about in the past and which, of course, is covered at great depth in the book).\n\nFootnotes:\n\nYes, it\u2019s true that in 2022, we saw several FAANGs and many other companies freeze hiring, and if you had postponed your interviews, you\u2019d have been left out in the cold. Despite how devastating these freezes were to affected candidates (and to the tech economy as whole), they are extremely rare, and in our humble opinion, not worth optimizing for or worrying about. You are very unlikely to have to deal with an impending freeze. \u21a9\n\nSome companies will also have technical deep dives, project presentations, assessments of niche skills, and so on. \u21a9\n\nInterview prep and job hunting are chaos and pain. We can help. Really.",
        "content_type": "blog",
        "source_url": "https://interviewing.io/blog/its-ok-to-postpone-your-interviews-if-youre-not-ready",
        "author": "Aline Lerner",
        "user_id": ""
      }
    ]
  },
  {
    "team_id": "1",
    "items": [
      {
        "title": "The Page Is About \\'Vibe Coding\\', A Term And Approach Related To Ai-Dependent Computer Programming.",
        "content": "AgentHistoryList(all_results=[ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Data written to todo.md successfully.', extracted_content='Data written to todo.md successfully.', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Opened new tab with URL https://www.wikipedia.org', extracted_content='\ud83d\udd17  Opened new tab #0 with url https://www.wikipedia.org', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory=\"Input 'vibecoding' into element 22.\", extracted_content='\u2328\ufe0f  Input vibecoding into index 22', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Clicked element 25', extracted_content='\ud83d\uddb1\ufe0f  Clicked button with index 25: Vibe coding\\nAI-dependent computer programming technique', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Page Link: https://en.wikipedia.org/wiki/Vibe_coding\\nQuery: title, content, author\\nExtracted Content:\\n```json\\n{\\n  \"message\": \"The requested information is not directly available on the webpage.\",\\n  \"explanation\": {\\n    \"title\": \"The page is about \\'Vibe coding\\', a term and approach related to AI-dependent computer programming.\",\\n    \"content\": \"The content includes a detailed explanation of what vibe coding is, the reception and use of the technique, examples, and its limitations such as quality and security issues, task complexity, and challenges with debugging.\",\\n    \"author\": \"Specific author information is not available for Wikipedia entries. The article cites multiple references and contributions from various editors typical to Wikipedia articles and mentions individuals such as Andrej Karpathy and contributors like Kevin Roose and Simon Willison.\"\\n  }\\n}\\n```', extracted_content='Page Link: https://en.wikipedia.org/wiki/Vibe_coding\\nQuery: title, content, author\\nExtracted Content:\\n```json\\n{\\n  \"message\": \"The requested information is not directly available on the webpage.\",\\n  \"explanation\": {\\n    \"title\": \"The page is about \\'Vibe coding\\', a term and approach related to AI-dependent computer programming.\",\\n    \"content\": \"The content includes a detailed explanation of what vibe coding is, the reception and use of the technique, examples, and its limitations such as quality and security issues, task complexity, and challenges with debugging.\",\\n    \"author\": \"Specific author information is not available for Wikipedia entries. The article cites multiple references and contributions from various editors typical to Wikipedia articles and mentions individuals such as Andrej Karpathy and contributors like Kevin Roose and Simon Willison.\"\\n  }\\n}\\n```', include_extracted_content_only_once=False, include_in_memory=False), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Extracted content from https://en.wikipedia.org/wiki/Vibe_coding for query \"Vibe coding full content with definitions, reception, and notable contributors.\"', extracted_content='Page Link: https://en.wikipedia.org/wiki/Vibe_coding\\nQuery: Vibe coding full content with definitions, reception, and notable contributors.\\nExtracted Content:\\n```json\\n{\\n  \"explanation\": \"The webpage from Wikipedia titled \\'Vibe coding\\' covers several aspects of the term, which refers to an AI-dependent computer programming technique. It details the definition, reception, use and limitations of vibe coding.\",\\n  \"content\": {\\n    \"definition\": {\\n      \"description\": \"Vibe coding is an approach to producing software using artificial intelligence, where a user describes a problem in natural language to a large language model (LLM), which in turn generates the code. The programmer\\'s role is more focused on guiding, testing, and refining AI-generated source code.\",\\n      \"origin\": \"The term was introduced by Andrej Karpathy in February 2025.\",\\n      \"advocacy\": \"Proponents argue it democratizes coding by allowing non-experts to produce software.\",\\n      \"criticism\": \"Critics mention issues related to accountability and security vulnerabilities.\"\\n    },\\n    \"reception_and_use\": {\\n      \"description\": \"It is seen as beneficial for non-coders and hobbyists to create basic functional software. However, the output is often limited and error-prone.\",\\n      \"examples\": \"Journalist Kevin Roose used it to create personalized applications like LunchBox Buddy, but experienced limitations and errors.\",\\n      \"industry_trend\": \"In March 2025, it was reported that a significant portion of startups used AI-generated codebases, emphasizing its growing adoption.\"\\n    },\\n    \"notable_contributors\": \"Andrej Karpathy is credited with introducing the concept of vibe coding. Journalist Kevin Roose and figures like Simon Willison have also commented on its implications.\"\\n  }\\n}\\n```', include_extracted_content_only_once=True, include_in_memory=False), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Data written to results.md successfully.', extracted_content='Data written to results.md successfully.', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='Data written to results.md successfully.', extracted_content='Data written to results.md successfully.', include_extracted_content_only_once=False, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='', extracted_content='Read from file results.md:\\n# Vibe coding Wikipedia Article\\n\\n## Title\\nVibe Coding\\n\\n## Content\\nVibe coding is an approach to producing software by using artificial intelligence (AI), where a person describes a problem in a few natural language sentences as a prompt to a large language model (LLM) tuned for coding. The LLM generates software based on the description, shifting the programmer\\'s role from manual coding to guiding, testing, and refining the AI-generated source code.\\n\\n## Key Contributions\\n- Introduced by: Andrej Karpathy\\n- Promotes amateur programmers\\n- Raises concerns about accountability and security\\n\\n## Limitations\\nVibe coding has notable limitations such as quality and security issues, complexity in tasks, and challenges with debugging.\\n\\n## Contributors\\n- Andrej Karpathy\\n- Cited Contributors: Kevin Roose, Simon Willison\\n\\n## JSON Structure\\n```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": \"Vibe coding is an approach to producing software...\",\\n  \"contributors\": [\"Andrej Karpathy\", \"Kevin Roose\", \"Simon Willison\"],\\n  \"limitations\": \"Quality and security issues, task complexity...\",\\n  \"key_contributions\": {\\n    \"introduced_by\": \"Andrej Karpathy\",\\n    \"promotes_amateurs\": true,\\n    \"security_concerns\": true\\n  }\\n}\\n```\\n', include_extracted_content_only_once=True, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='- [ ] Save results in results.md', extracted_content=\"Read from file todo.md:\\n# Vibecoding Wikipedia Search\\n\\n## Tasks\\n- [ ] Search for 'vibecoding' on Wikipedia\\n- [ ] Extract title, content, author if available\\n- [ ] Convert content to markdown\\n- [ ] Structure results as JSON, limited to 10 items\\n- [ ] Save results in results.md\", include_extracted_content_only_once=True, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='', extracted_content='Read from file results.md:\\n# Vibe coding Wikipedia Article\\n\\n## Title\\nVibe Coding\\n\\n## Content\\nVibe coding is an approach to producing software by using artificial intelligence (AI), where a person describes a problem in a few natural language sentences as a prompt to a large language model (LLM) tuned for coding. The LLM generates software based on the description, shifting the programmer\\'s role from manual coding to guiding, testing, and refining the AI-generated source code.\\n\\n## Key Contributions\\n- Introduced by: Andrej Karpathy\\n- Promotes amateur programmers\\n- Raises concerns about accountability and security\\n\\n## Limitations\\nVibe coding has notable limitations such as quality and security issues, complexity in tasks, and challenges with debugging.\\n\\n## Contributors\\n- Andrej Karpathy\\n- Cited Contributors: Kevin Roose, Simon Willison\\n\\n## JSON Structure\\n```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": \"Vibe coding is an approach to producing software...\",\\n  \"contributors\": [\"Andrej Karpathy\", \"Kevin Roose\", \"Simon Willison\"],\\n  \"limitations\": \"Quality and security issues, task complexity...\",\\n  \"key_contributions\": {\\n    \"introduced_by\": \"Andrej Karpathy\",\\n    \"promotes_amateurs\": true,\\n    \"security_concerns\": true\\n  }\\n}\\n```\\n', include_extracted_content_only_once=True, include_in_memory=True), ActionResult(is_done=False, success=None, error=None, attachments=None, long_term_memory='', extracted_content='Read from file results.md:\\n# Vibe coding Wikipedia Article\\n\\n## Title\\nVibe Coding\\n\\n## Content\\nVibe coding is an approach to producing software by using artificial intelligence (AI), where a person describes a problem in a few natural language sentences as a prompt to a large language model (LLM) tuned for coding. The LLM generates software based on the description, shifting the programmer\\'s role from manual coding to guiding, testing, and refining the AI-generated source code.\\n\\n## Key Contributions\\n- Introduced by: Andrej Karpathy\\n- Promotes amateur programmers\\n- Raises concerns about accountability and security\\n\\n## Limitations\\nVibe coding has notable limitations such as quality and security issues, complexity in tasks, and challenges with debugging.\\n\\n## Contributors\\n- Andrej Karpathy\\n- Cited Contributors: Kevin Roose, Simon Willison\\n\\n## JSON Structure\\n```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": \"Vibe coding is an approach to producing software...\",\\n  \"contributors\": [\"Andrej Karpathy\", \"Kevin Roose\", \"Simon Willison\"],\\n  \"limitations\": \"Quality and security issues, task complexity...\",\\n  \"key_contributions\": {\\n    \"introduced_by\": \"Andrej Karpathy\",\\n    \"promotes_amateurs\": true,\\n    \"security_concerns\": true\\n  }\\n}\\n```\\n', include_extracted_content_only_once=True, include_in_memory=True), ActionResult(is_done=True, success=True, error=None, attachments=['/var/folders/zp/x2dpmx_57_z9bzlbd5q__w700000gn/T/bf3d47df-9f92-42e2-a042-51751e8abc5b/data_storage/results.md'], long_term_memory=\"Task completed: True - The task of searching Wikipedia for 'vibecoding' and extracting content has been successfully comple - 212 more characters\", extracted_content='The task of searching Wikipedia for \\'vibecoding\\' and extracting content has been successfully completed. The extracted data includes the title, content, and notable contributor information such as Andrej Karpathy. The data is structured in markdown and JSON format, limited to 10 items, and stored in results.md.\\n\\nAttachments:\\n\\nresults.md:\\n# Vibe coding Wikipedia Article\\n\\n## Title\\nVibe Coding\\n\\n## Content\\nVibe coding is an approach to producing software by using artificial intelligence (AI), where a person describes a problem in a few natural language sentences as a prompt to a large language model (LLM) tuned for coding. The LLM generates software based on the description, shifting the programmer\\'s role from manual coding to guiding, testing, and refining the AI-generated source code.\\n\\n## Key Contributions\\n- Introduced by: Andrej Karpathy\\n- Promotes amateur programmers\\n- Raises concerns about accountability and security\\n\\n## Limitations\\nVibe coding has notable limitations such as quality and security issues, complexity in tasks, and challenges with debugging.\\n\\n## Contributors\\n- Andrej Karpathy\\n- Cited Contributors: Kevin Roose, Simon Willison\\n\\n## JSON Structure\\n```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": \"Vibe coding is an approach to producing software...\",\\n  \"contributors\": [\"Andrej Karpathy\", \"Kevin Roose\", \"Simon Willison\"],\\n  \"limitations\": \"Quality and security issues, task complexity...\",\\n  \"key_contributions\": {\\n    \"introduced_by\": \"Andrej Karpathy\",\\n    \"promotes_amateurs\": true,\\n    \"security_concerns\": true\\n  }\\n}\\n```\\n', include_extracted_content_only_once=False, include_in_memory=False)], all_model_outputs=[{'write_file': {'file_name': 'todo.md', 'content': \"# Vibecoding Wikipedia Search\\n\\n## Tasks\\n- [ ] Search for 'vibecoding' on Wikipedia\\n- [ ] Extract title, content, author if available\\n- [ ] Convert content to markdown\\n- [ ] Structure results as JSON, limited to 10 items\\n- [ ] Save results in results.md\"}, 'interacted_element': None}, {'open_tab': {'url': 'https://www.wikipedia.org'}, 'interacted_element': None}, {'input_text': {'index': 22, 'text': 'vibecoding'}, 'interacted_element': DOMHistoryElement(tag_name='input', xpath='html/body/main/div[2]/form/fieldset/div/input', highlight_index=22, entire_parent_branch_path=['main', 'div', 'form', 'fieldset', 'div', 'input'], attributes={'id': 'searchInput', 'name': 'search', 'type': 'search', 'size': '20', 'autofocus': 'autofocus', 'accesskey': 'F', 'dir': 'auto', 'autocomplete': 'off', 'style': 'padding-right: 64px;'}, shadow_root=False, css_selector='html > body > main > div:nth-of-type(2) > form > fieldset > div > input[id=\"searchInput\"][name=\"search\"][type=\"search\"][autocomplete=\"off\"]', page_coordinates=None, viewport_coordinates=None, viewport_info=None)}, {'click_element_by_index': {'index': 25}, 'interacted_element': DOMHistoryElement(tag_name='div', xpath='html/body/main/div[2]/form/fieldset/div/div[2]/div/a/div[1]', highlight_index=25, entire_parent_branch_path=['main', 'div', 'form', 'fieldset', 'div', 'div', 'div', 'a', 'div'], attributes={}, shadow_root=False, css_selector='html > body > main > div:nth-of-type(2) > form > fieldset > div > div:nth-of-type(2) > div > a > div:nth-of-type(1)', page_coordinates=None, viewport_coordinates=None, viewport_info=None)}, {'extract_structured_data': {'query': 'title, content, author'}, 'interacted_element': None}, {'extract_structured_data': {'query': 'Vibe coding full content with definitions, reception, and notable contributors.'}, 'interacted_element': None}, {'write_file': {'file_name': 'results.md', 'content': '```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": {\\n    \"definition\": {\\n      \"description\": \"Vibe coding is an approach to producing software using artificial intelligence, where a user describes a problem in natural language to a large language model (LLM), which in turn generates the code. The programmer\\'s role is more focused on guiding, testing, and refining AI-generated source code.\",\\n      \"origin\": \"The term was introduced by Andrej Karpathy in February 2025.\",\\n      \"advocacy\": \"Proponents argue it democratizes coding by allowing non-experts to produce software.\",\\n      \"criticism\": \"Critics mention issues related to accountability and security vulnerabilities.\"\\n    },\\n    \"reception_and_use\": {\\n      \"description\": \"It is seen as beneficial for non-coders and hobbyists to create basic functional software. However, the output is often limited and error-prone.\",\\n      \"examples\": \"Journalist Kevin Roose used it to create personalized applications like LunchBox Buddy, but experienced limitations and errors.\",\\n      \"industry_trend\": \"In March 2025, it was reported that a significant portion of startups used AI-generated codebases, emphasizing its growing adoption.\"\\n    },\\n    \"notable_contributors\": \"Andrej Karpathy is credited with introducing the concept of vibe coding. Journalist Kevin Roose and figures like Simon Willison have also commented on its implications.\"\\n  }\\n}\\n```\\n'}, 'interacted_element': None}, {'write_file': {'file_name': 'results.md', 'content': '# Vibe coding Wikipedia Article\\n\\n## Title\\nVibe Coding\\n\\n## Content\\nVibe coding is an approach to producing software by using artificial intelligence (AI), where a person describes a problem in a few natural language sentences as a prompt to a large language model (LLM) tuned for coding. The LLM generates software based on the description, shifting the programmer\\'s role from manual coding to guiding, testing, and refining the AI-generated source code.\\n\\n## Key Contributions\\n- Introduced by: Andrej Karpathy\\n- Promotes amateur programmers\\n- Raises concerns about accountability and security\\n\\n## Limitations\\nVibe coding has notable limitations such as quality and security issues, complexity in tasks, and challenges with debugging.\\n\\n## Contributors\\n- Andrej Karpathy\\n- Cited Contributors: Kevin Roose, Simon Willison\\n\\n## JSON Structure\\n```json\\n{\\n  \"title\": \"Vibe Coding\",\\n  \"content\": \"Vibe coding is an approach to producing software...\",\\n  \"contributors\": [\"Andrej Karpathy\", \"Kevin Roose\", \"Simon Willison\"],\\n  \"limitations\": \"Quality and security issues, task complexity...\",\\n  \"key_contributions\": {\\n    \"introduced_by\": \"Andrej Karpathy\",\\n    \"promotes_amateurs\": true,\\n    \"security_concerns\": true\\n  }\\n}\\n```\\n'}, 'interacted_element': None}, {'read_file': {'file_name': 'results.md'}, 'interacted_element': None}, {'read_file': {'file_name': 'todo.md'}, 'interacted_element': None}, {'read_file': {'file_name': 'results.md'}, 'interacted_element': None}, {'read_file': {'file_name': 'results.md'}, 'interacted_element': None}, {'done': {'text': \"The task of searching Wikipedia for 'vibecoding' and extracting content has been successfully completed. The extracted data includes the title, content, and notable contributor information such as Andrej Karpathy. The data is structured in markdown and JSON format, limited to 10 items, and stored in results.md.\", 'success': True, 'files_to_display': ['results.md']}, 'interacted_element': None}])",
        "content_type": "web_page",
        "source_url": "request://search vibecoding on wikipedia and scrape it",
        "author": "",
        "user_id": ""
      }
    ]
  }
]