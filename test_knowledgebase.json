{
  "team_id": "1",
  "items": [
    {
      "title": "Senior Engineer\u2019s Guide to Google Interviews + Questions",
      "content": "Google\u2019s interview process consists of the following steps:\n\nWant to know if you\u2019re ready to interview at Google? Do anonymous mock interviews with real Google interviewers, and see exactly where you stack up.\n\nSee available timesBefore we get into the details of each of these steps, here are a few general notes about Google\u2019s job interview process, evaluation criteria, and interviewers.\n\nAll human organizations behave like a metaphor; Google isn\u2019t a sports team, or a family, or an army. It\u2019s a cool grad school. Larry and Sergey set up their offices based on the model of a Stanford campus on purpose. They wanted to create an environment and company culture where people can feel chill enough to talk about anything. In general, Google interviewers tend to be more collaborative than other FAANG interviewers. At Google, the slower you go, the faster you get there.\n\nGoogle has one big, centralized interview process that\u2019s completely divorced from which team you might end up on, which means that you will NOT, however, be interviewing with your future team members \u2013 Google has a horde of interchangeable technical interviewers who have all been trained on the same process. If you do well, there will be a team matching component at the end.\n\nAt Google, because the process is centralized, you cannot interview with multiple teams concurrently, which means you don\u2019t get multiple shots on goal. Not only that, but Google has a limit for how many chances they\u2019ll give you before you\u2019re blocked from interviewing again.\n\n\u201cYou can interview three times in 5 years. If you fail all three times then you can\u2019t interview at Google again: you\u2019re blocked.\u201d\n\nNote that recently, there have been rumblings of Google changing their process to something more decentralized, where a hiring manager chooses you for a team *before* you interview, nullifying the need for post-onsite team matching. As far as we know, this new model is being tried out right now, but the change hasn\u2019t been adopted company-wide.\n\nGoogle also has rules for candidates who *pass* their interviews:\n\n\u201cIf you pass Google\u2019s onsite, and end up not taking the offer, your \u201cpassing of the onsite '' is good for about a year. And if you choose to re-engage in that time, the process varies widely. Usually you can skip the phone interview. Most times you have to do the full or partial onsite. If you choose to re-engage, tell their recruiters \u2018I already passed the onsite\u2019 and push to get as many steps skipped as you can.\u201d\n\nGoogle is not results-oriented. They\u2019re process oriented. In other words, they care more about the \u201cHow\u201d than the \u201cWhat\u201d. You\u2019ve heard it before, and it\u2019s true \u2013 they don\u2019t need you to get to the optimal solution, but they do need to be impressed by your thought process. Because of this, Google is more attracted to comfort with ambiguity than speed.\n\nOddly, in spite of using a centralized interview process, Google doesn\u2019t have in-depth training for its interviewers; it may surprise some candidates that there\u2019s a larger-than-expected number of bad interviewers at Google.\n\n\u201cThere is one thing that always bothered me about the Google interview process. And it's something that a lot of candidates don\u2019t realize. There are a lot of bad interviewers at Google. Mostly because there are a lot of highly talented people who think they know everything.\n\nI was the interviewer for the third interview round at in-person onsite. And I saw the candidate was there by himself; the second interviewer wasn\u2019t there. The candidate was alone because the second interviewer got frustrated \u2013 they thought the candidate wasn\u2019t worth the time for an onsite, so they left early.\u201d\n\n\u201cGoogle is more likely than Facebook to design questions on purpose to be tricky. At Google, sometimes this is intentionally disguising technical questions to look like X but they\u2019re really Y. And other times at Google, it\u2019s designing a technical question such that if a candidate doesn\u2019t ask a particular question they likely won\u2019t get the answer.\u201d\n\nPlease see the section above called \u201cA note about recruiter calls\u201d\n\nGoogle\u2019s technical phone screen is a coding interview that focuses exclusively on data structures and algorithms questions. Your interviewer will ask you to write code to solve a specific problem.\n\nOne idiosyncratic aspect of Google\u2019s process is their insistence on using Google docs for writing code (versus other companies which tend to use tools like CoderPad). This can be a bit jarring for those of us who are used to writing code in an IDE that does things like auto-indentation, auto-complete, syntax highlighting, adding missing parentheses or brackets etc. Despite not using an IDE, your interviewer will expect you to produce syntactically correct code. This is really hard.\n\nBefore your Google interview, you should practice in Google docs so you don\u2019t forget to close parentheses or indent your code.\n\nThat said, more recently, Google has started interviewing using an internal tool with syntax highlighting, indentation and brackets completion. Whether you get to use it or not depends on your geography.\n\nThe second phone screen happens only if the first one did not produce enough signal to move forward. Perhaps you didn\u2019t communicate your thought process well enough, your code wasn\u2019t of good enough quality, or you weren\u2019t fast enough \u2013 but it\u2019ll be only one of these \u2013 if you struggled with two or all three, most likely you aren\u2019t moving forward.\n\nIf you do get scheduled for a second phone screen, push your recruiter to give you detailed feedback so you can do better the second time \u2013 nothing beats knowing *exactly* where you need to improve. You probably won\u2019t get a response, but if you do it\u2019s a large boost to your prep.\n\nIf you get a second phone screen it will be very similar to the first in terms of structure and content.\n\nThe Google onsite usually includes 4-6 rounds. Recently, there have been some internal experiments with the format, but generally the rounds are primarily coding, and secondarily system design. Some candidates get a single behavioral round, and others get to skip it.\n\nThe more experience you have, the higher proportion of system design and domain-specific questions you can expect to be asked.\n\nAs we mentioned above, Google is process-oriented rather than results-oriented. As such, communication during coding and system design rounds is more important at Google than the end result.\n\n**The most important rounds at Google are coding. In fact, Google is the only FAANG company that considers coding to be more important than system design**. Google\u2019s coding rounds are about complexity more than speed. Their interviewers are allowed to ask anything they want, so it's more likely you might get a question you\u2019ve never practiced before.\n\nGoogle interviewers are more likely than any other FAANG company to purposefully design a question so it tricks candidates. For example, they\u2019ll disguise a question to look like it\u2019s Three Sum, but that\u2019s a red herring \u2013 it\u2019s not a Three Sum problem. It just looks like one.\n\nA lot of what you\u2019ll see in the onsite coding mirrors what you saw in the technical phone screen. During the onsite, you may see your interviewer layer more complexity on top of questions \u2013 they\u2019ll design a question where they plan for you to get to the solution, then when you do they\u2019ll move the goalposts and say something like: \u201cRemember that assumption we made earlier about [X thing]? Let\u2019s remove that. How would that change your approach?\u201d\n\n\u201cAt Google, I\u2019ve passed more people that *arrive at the optimal solution without coding it* than I do people who *arrive at the optimal solution and code it*. The actual code you write is less important than the thought process.\u201d\n\n\u201cGoogle is highly unstructured. Everyone can ask whatever they want.\u201d\n\nEven though they can ask whatever they want, Google interviewers have a question bank too, but the bank is much much bigger than Facebook\u2019s bank and, like Facebook\u2019s bank, it\u2019s community maintained. Some interviewers never deviate from the bank, and others don\u2019t touch it, preferring instead to formulate their own unique questions..\n\nThis speaks to Google rewarding the \u201chow\u201d (aka \u201chow a candidate got there\u201d) or their thought processes. It also speaks to Google rewarding comfort with ambiguity. Other FAANGs have specific niche topics they love hearing and talking about (such as \u201cperformance\u201d at Amazon), but Google is more abstract. Google might love speaking about and asking about ambiguity more than any other FAANG.\n\nFinally, Google\u2019s coding questions are never practical. They are always theoretical. They will never ask you to pull up your own environment and write a program. They will also never ask you to take a solution to a coding problem and apply it to a real world scenario. When prepping for Google, only practice theoretical questions.\n\nFor everything you need to prepare for Google\u2019s coding interview, check out the section called \"Google coding interview preparation resources\" below.\n\nThe second most important onsite interview type at Google is system design. Again, they are allowed to ask anything they want, so don\u2019t be scared off if you get a question you\u2019ve never practiced before.\n\nHigh-level and low-level system design questions are both likely. Some examples include:\n\nGoogle system design interviewers also tend to design problems that include linchpin questions. These are questions where if you don\u2019t ask about a specific aspect of the problem, you can\u2019t really solve it. For example, an older system design question at Google asked you to set up a service in some foreign country, and in the prompt, the interviewer mentioned that you have a dependency on some third party service.\n\nThe linchpin question to ask: \u201cWhat\u2019s the service level agreement for that 3rd party service?\u201d If you didn\u2019t ask that (or something like it), then you wouldn\u2019t be able to effectively reason about availability, which you\u2019d need to do in order to do well on the question.\n\nTo avoid getting tricked, ask even more questions in Google system design rounds than you normally would.\n\nThe least important round at Google is the behavioral round. They have the easiest behavioral screen in FAANG. Plus, you might complete an onsite at Google without a behavioral round because they\u2019re optional. It\u2019s not clear which candidates get them and which don\u2019t. This is another reason to not prep too hard for their behavioral round.\n\nIf you do get some behavioral questions, they might be one of the following:\n\nGoogle is also more likely to ask you reflective questions. Most other FAANGs stick to situational questions such as, \u201cTell me of a time when\u2026\u201d. Those situational questions ask you to describe a past circumstance or scenario you\u2019ve actually experienced and are fairly straightforward to answer. Reflective questions, on the other hand, can be tricky because they\u2019re asking you to reflect on, or speak to, something less concrete, e.g., \u201cWhat do you think about setting goals?\u201d\n\nThe smart way to answer a reflective question is to re-formulate it, and then answer as if it\u2019s a situational question. So, \u201cWhat do you think about setting goals\u201d instead becomes,\u201dTalk about a time you used goal-setting as a time management strategy\u201d, which you can now more-easily answer by describing a real experience and outcome, \u201cThe last time I set goals\u2026etc\u201d, as opposed to wading into theories about personal agency. \u201cI think goals are cool and important\u2026\u201d might not get high marks.\n\n\u201cTo be honest, there was some cultural backlash at Google when they announced that we had to do these behavioral interviews. What that means is you may get an interviewer who has very little interest in conducting this type of interview. Which could go very good or very bad. I have some peers who think this should not be a part of the interview process. So they give everyone the highest marks, pretty much just to eliminate this category from the interview. Google is primarily engineers, and most of the engineers think that this is a bunch of HR BS. So they either just won\u2019t accept any calendar invites they get or they'll just check the boxes.\u201d\n\nMost of the time, the post-interview feedback process at Google is completely asynchronous, and interviewers don\u2019t meet live to discuss hiring decisions. That\u2019s one reason why interviewing at Google isn\u2019t like interviewing with humans: it\u2019s more akin to interviewing with a machine.\n\nEach interviewer rates candidates on the following seven-point scale: Strong No-Hire, No Hire, Leaning No-Hire, On The Fence, Leaning Hire, Hire, and Strong Hire.\n\nHow this affects candidates is simple: a Strong Hire can get you an offer, but it can also buy you a second chance. If you don\u2019t get an offer, but you get a Strong Hire from one of your interviewers, you might be offered one bonus interview round to decide whether you get an offer or not.\n\nThat said, you don\u2019t need to get a \u201cStrong Hire\u201d to get a second chance. Overall, if you showed enough signal to not-fail but not enough to pass, sometimes they will ask you to do an additional round.\n\nIf you get lucky enough to get a round where you are really excelling, don\u2019t quit while you\u2019re ahead. Keep going. In that round, don\u2019t just strive to win; strive for total domination.\n\nA \u201cStrong No-Hire\u201d bars you from interviewing at Google for some time. Reports vary here, but one of our Google interviewers told us that if you get a Strong No-Hire, you might be frozen out for several years.\n\nIf you passed overall then you will move on to the hiring committee phase.\n\nGoogle\u2019s hiring committee consists of four to five engineers and engineering managers who have not interviewed you, with the intent of making hiring decisions as objective as possible.\n\nGoing into the hiring committee review, your recruiter will prepare a packet that consists of your resume, any notes from the person who referred you (if you were referred), your recruiter\u2019s notes from their call with you, and all the feedback from your interviewers, from the technical phone screen to the onsite.\n\nIf you\u2019re told you\u2019ve passed the onsite, ask if you can submit a more recent copy of your resume. Some Google recruiters will let your new resume be the only resume the Hiring Committee sees. Your resume you submitted for the online application probably wasn\u2019t customized for Google, but what you submit to the hiring committee can be.\n\nWhen the committee meets, they evaluate all the data on you holistically, and they need a consensus in order to decide to make a hire.\n\nOther than hire/no-hire decisions, the hiring committee will also decide on leveling. Ever since COVID and the rise of remote interviewing, we\u2019ve gotten more and more reports from users that they\u2019re being down-leveled at Google. Apparently the rationale is that Google doesn\u2019t feel like they get as much signal from remote interviews as they did from in-person ones, and as such, when they don\u2019t get enough of a signal for a hire but too much good signal for a rejection: they downlevel \u2013 when you want to reduce the probability of a false positives for L5\u2026 offer L4!\n\nEngineers who are downleveled at Google accept the lower level offer a lot of the time, especially in the current climate. In some extreme cases, we\u2019ve seen engineering managers with 10+ YoE accept an L3 (basically a new grad) offer.\n\nOnce you get past the hiring committee, you will move on to team matching. The team matching process is a bit like speed dating. In the ideal case, your recruiter will propose a few teams that are actively looking for someone with your skills, and then you\u2019ll meet with the hiring manager from each team to gauge cultural fit and chemistry. In order to move forward, both of you have to opt in.\n\nThat said, there are rare instances where a candidate will get past the hiring committee but then not find a team that they gel with.\n\n\u201cGetting five scores of \u2018Leaning Hire\u2019 is most likely to result in a \u2018No Hire\u2019 decision. I have seen many cases where the candidates got five scores of \u2018Leaning Hire\u2019, and the recruiter gave them positive feedback too, but the candidate got rejected. In these cases, every person the candidate dealt with directly (the interviewers) were positive, yet the hiring committee (the only people in the process who dealt with the candidate indirectly) rejected the candidate.\u201d\n\nHere are some tips for preparing for your Google coding interview:\n\nIn addition, we\u2019ve aggregated a bunch of useful Google content for you! We have replays of candidates doing mock interviews with Google interviewers, long-form solutions to common Google questions, and deep dives into technical topics that tend to come up in Google interviews.\n\nBelow are a series of mock interview replays, conducted by Google interviewers on our platform. Watch them so you can learn from others\u2019 mistakes.\n\nBelow are common questions that interviewers from Google ask on our platform. Since our data comes from mock interviews, questions may not be exactly the same as what you'd see in real interviews.\n\nTo figure out what technical topics will come up in your Google interviews, we did two things. First, we spoke to a bunch of Google interviewers in our community. Then we cross-referenced all the anecdotes we heard with Glassdoor data AND our own data-set of mock interviews in the style of Google. Based on all of the above, here are the technical topics you\u2019re likely to encounter:\n\nWant to know if you\u2019re ready to interview at Google? Do anonymous mock interviews with real Google interviewers, and see exactly where you stack up.\n\nSee available timesInterview prep and job hunting are chaos and pain. We can help. Really.",
      "content_type": "blog",
      "source_url": "https://interviewing.io/guides/hiring-process/google",
      "author": "",
      "user_id": ""
    }
  ]
}